//
//
//Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
//Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
//Pentagonal 	  	Pn=n(3n-1)/2 	  	1, 5, 12, 22, 35, ...
//Hexagonal 	  	Hn=n(2n-1) 	  	1, 6, 15, 28, 45, ...
//
//It can be verified that T285 = P165 = H143 = 40755.
//
//Find the next triangle number that is also pentagonal and hexagonal.

package problems;

import java.math.BigInteger;
import java.util.stream.Stream;

public class Problem_45 {

private static BigInteger run3() {
		return hexagonalStream(144)
				                 .parallel()
				                 .filter(Problem_45::isPentagonal)
				                 .skip(1)
				                 .findFirst()
				                 .orElse(BigInteger.valueOf(1));
	}

private static boolean isPentagonal(BigInteger input) {
		input = input.multiply(BigInteger.valueOf(24)).add(BigInteger.valueOf(1));
		double c = (Math.sqrt(input.doubleValue())+1)/6;
		return isInteger(c);
	}

	private static boolean isInteger(double c) {
		return Math.floor(c) == c;
	}

	private static BigInteger getHex(BigInteger i) {
		BigInteger j = (i.multiply(BigInteger.valueOf(2)).subtract(BigInteger.valueOf(1))).multiply(i);
		return j;
	}

	private static Stream<BigInteger> hexagonalStream(int beginning) {
		return Stream.iterate(beginning, e-> e + 1)
				.parallel()
				.map(e -> BigInteger.valueOf(e))
				.map(Problem_45::getHex);
	}
}